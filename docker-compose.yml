# Use root/example as user/password credentials
version: '3.1'

networks:
  conserver:
    external: true

services:
  vcon-admin:
    container_name: "admin"
    build:
      dockerfile: ./Dockerfile
      context: .
    command: "streamlit run ./admin.py"
    ports:
      - "${VCON_ADMIN_EXTERNAL_PORT:-8501}:8501"
    volumes:
      - .:/app
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - mongo
      - elasticsearch
    stop_grace_period: 60s
    networks:
      - conserver

  mongo:
    container_name: "mongo"
    image: mongo
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: "${MONGO_INITDB_ROOT_USERNAME:-root}"
      MONGO_INITDB_ROOT_PASSWORD: "${MONGO_INITDB_ROOT_PASSWORD:-example}"
    networks:
      - conserver
    volumes:
      - mongo-data:/data/db

  mongo-express:
    container_name: "mongo-express"
    image: mongo-express
    restart: always
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: "${MONGO_INITDB_ROOT_USERNAME:-root}"
      ME_CONFIG_MONGODB_ADMINPASSWORD: "${MONGO_INITDB_ROOT_PASSWORD:-example}"
      ME_CONFIG_MONGODB_URL: "${MONGO_URL:-mongodb://root:example@mongo:27017/}"
      ME_CONFIG_BASICAUTH: false
    networks:
      - conserver

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.13.4
    container_name: "elasticsearch"
    environment:
      - node.name=elasticsearch
      - discovery.type=single-node
      - ELASTIC_USERNAME="${ELASTIC_USERNAME:-elastic}"
      - ELASTIC_PASSWORD="${ELASTIC_PASSWORD:-changeme}"
    mem_limit: 1g
    ports:
      - 9200:9200
    volumes:
      - es_data:/usr/share/elasticsearch/data
    networks:
      - conserver

volumes:
  es_data:
    driver: local
  mongo-data:
    driver: local

