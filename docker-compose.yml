services:
  admin:
    container_name: "admin"
    build:
      dockerfile: ./Dockerfile
      context: .
    command: "streamlit run ./admin.py --server.baseUrlPath='/admin'"
    volumes:
      - .:/app
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - mongo
      - elasticsearch
    stop_grace_period: 60s
    profiles:
      - dev
      - prod
      - standalone
    labels:
      - "traefik.http.routers.admin.rule=PathPrefix(`/admin`)"
      - "traefik.http.routers.admin.middlewares=auth-middleware@file"      

  mongo:
    container_name: "mongo"
    image: mongo
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: "${MONGO_INITDB_ROOT_USERNAME:-root}"
      MONGO_INITDB_ROOT_PASSWORD: "${MONGO_INITDB_ROOT_PASSWORD:-example}"
    volumes:
      - mongo-data:/data/db
    profiles:
      - prod
      - standalone
  
  mongo-express:
    container_name: "mongo-express"
    image: mongo-express
    restart: always
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: "${MONGO_INITDB_ROOT_USERNAME:-root}"
      ME_CONFIG_MONGODB_ADMINPASSWORD: "${MONGO_INITDB_ROOT_PASSWORD:-example}"
      ME_CONFIG_MONGODB_URL: "${MONGO_URL:-mongodb://root:example@mongo:27017/}"
      ME_CONFIG_BASICAUTH: false
      ME_CONFIG_SITE_BASEURL: "/mongoadmin"
    profiles:
      - dev
      - standalone  
    labels:
      - "traefik.http.routers.mongo-express.rule=PathPrefix(`/mongoadmin`)"
      - "traefik.http.routers.mongo-express.middlewares=auth-middleware@file"


  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.13.4
    container_name: "elasticsearch"
    environment:
      - node.name=elasticsearch
      - discovery.type=single-node
      - ELASTIC_USERNAME="${ELASTIC_USERNAME:-elastic}"
      - ELASTIC_PASSWORD="${ELASTIC_PASSWORD:-changeme}"
    mem_limit: 1g
    volumes:
      - es_data:/usr/share/elasticsearch/data
    profiles:
      - dev
      - standalone


  traefik:
    # The official v3 Traefik docker image
    image: traefik:v3.2
    container_name: "traefik"
    # Enables the web UI and tells Traefik to listen to docker
    command: 
      - "--api.insecure=true"
      - "--providers.docker"
      - "--providers.file.directory=/etc/traefik/dynamic" 
    ports:
      # The HTTP port
      - "80:80"
      # The Web UI (enabled by --api.insecure=true)
      - "8080:8080"
    volumes:
      # So that Traefik can listen to the Docker events
      - ./traefik.yml:/etc/traefik/traefik.yml
      - /var/run/docker.sock:/var/run/docker.sock
      - ./dynamic:/etc/traefik/dynamic
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.dashboard.rule=Host(`traefik.docker.localhost`)"
      - "traefik.http.routers.dashboard.service=api@internal"
      

volumes:
  es_data:
    driver: local
  mongo-data:
    driver: local

